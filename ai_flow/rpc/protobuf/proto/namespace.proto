/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

import "google/api/annotations.proto";
import "common.proto";

option py_generic_services = true;
option go_package = "/ai_flow";

package ai_flow;

message NamespaceProto {
    string name = 2;
    map<string, string> properties = 3;
}
message NamespaceIdentifier {
    string name = 1;
}
message UpdateNamespaceRequest {
    string name = 1;
    map<string, string> properties = 2;
}

service NamespaceService{
  rpc addNamespace (NamespaceProto) returns (Response) {
    option (google.api.http) = {
      post: "/namespace/add"
      body: "*"
    };
  };
  rpc getNamespace (NamespaceIdentifier) returns (Response) {
    option (google.api.http) = {
      get: "/namespace/get/{name}"
    };
  };
  rpc updateNamespace (UpdateNamespaceRequest) returns (Response) {
    option (google.api.http) = {
      post: "/namespace/update"
      body: "*"
    };
  };
  rpc listNamespace (ListRequest) returns (Response) {
    option (google.api.http) = {
      post: "/namespace/list"
      body: "*"
    };
  };
  rpc deleteNamespace (NameRequest) returns (Response) {
    option (google.api.http) = {
      get: "/namespace/delete/{name}"
    };
  };
}